//= require jquery
//= require jquery_ujs
//= require jquery.blockUI
//= require chosen-jquery
//= require chosen
//= require bootstrap-transition
//= require bootstrap-alert
//= require bootstrap-button
//= require bootstrap-carousel
//= require bootstrap-collapse
//= require bootstrap-dropdown
//= require bootstrap-modal
//= require bootstrap-scrollspy
//= require bootstrap-tab
//= require bootstrap-tooltip
//= require bootstrap-popover
//= require typeahead
//= require jquery.simplemodal.1.4.2.min
//= require jquery.placeholder.min
//= require jquery-fileupload/basic
//= require draw_map.js.erb
//= require jquery.qtip-1.0.0-rc3.min.js

// I took out scripts.js, which contains the ajax functions, because back and forward buttons are not working.

// 25 - 27, max options that can be put in chosen search box is 2
$(document).ready(function() {
    $("select.chosen").chosen({ max_selected_options: 2 })
    // if the user tries to put in more than 2, show then this message:
    $("select.chosen").bind("liszt:maxselected", function () { alert("Enter up to 2 things. For example, 'plasterer' and 'paver', for someone who might do both."); });
});

// 18-8-13 - commented out the code below, 29-32...I don't think it actually DOES anything?
$('select').chosen();
$('.chzn-single').css('width','290px');
$('.chzn-drop').css('width','298px');
$('.chzn-search input').css('width','263px');



$(function() {
    $.extend($.blockUI.defaults.css, {
        backgroundColor: 'transparent',
        border: 'none',
        opacity: '0.4'
    });

    $.extend($.blockUI.defaults.overlayCSS, {
        backgroundColor: '#ccc',
        opacity: '0.4'
    });

    $.blockUI.defaults.message = '<img src="/assets/ajax-loader.gif" alt="Loading ..." />';

    $("select.chosen").each(function () {
        $(this).attr('data-placeholder', $(this).attr('placeholder'));
    }).chosen().change(function (event, object) {
        // console.log("event");
        if (object.selected && object.selected.match("^user_")) {
            // comment out the line below, to get the ajax working
            // and uncomment the last 3 lines of this routine.
            window.location.href = object.selected.replace('user_', '/');
            //$(".search-choice").remove();
            //below is the code for selecting a 'user' from the Chosen
            //list. The ajax function, in scripts.js, is then loaded
            // var url = object.selected.replace('user_', '/users/');
            // $.get(url, ajax_loaded);

        }
    });

    $('a.fb-login').click(function(e) {
        e.preventDefault();

        $.blockUI();
        var link = $(this);

        FB.login(function(response) {
            if (response && response.authResponse) {
                $.ajax({
                    url: link.attr('href'),
                    method: 'POST',
                    data: { signed_request: response.authResponse.signedRequest },
                    complete: function() {
                        $("#wizard").unblock();
                    }
                })
            }
            else {
                $.unblockUI();
            }
        },{
            scope: link.data('scope')
        });
    });

    $('a.fb-logout').click(function(e) {
        FB.logout();
    });

    var rails = $.extend($.rails, {
        buttonClickSelector: 'button[data-confirm], button[data-method], button[data-remote], button[data-disable-with]',
        buttonDisableSelector: 'button[data-disable-with]',

        href: function(element) {
            return element.attr('href') || element.data('url');
        }

    });

    $(document).delegate(rails.buttonClickSelector, 'click.rails', function(e) {
      var button = $(this), method = button.data('method'), data = button.data('params');
      if (!rails.allowAction(button)) return rails.stopEverything(e);

      if (button.is(rails.buttonDisableSelector)) rails.disableElement(button);

      if (button.data('remote') !== undefined) {
        if ( (e.metaKey || e.ctrlKey) && (!method || method === 'GET') && !data ) { return true; }

        if (rails.handleRemote(button) === false) { rails.enableElement(button); }
        return false;

      } else if (button.data('method')) {
        rails.handleMethod(button);
        return false;
      }
    });

    $('.map-yes-link').live('click', function(e) {
        e.preventDefault();
        $('#address_form').submit();
    });

    $('.map-no-link').live('click', function(e) {
        e.preventDefault();

            $('#address_autocomplete').val('').focus();
            $('#user_lat').val('');
            $('#user_lng').val('');
            $('#user_city').val('');
            $('#changed').val('0');
            initialize_google_maps();

    });

    $('.email-invite-link').click(function(e) {
        e.preventDefault();
        $('html').block();
        $.get("/email_invites/", function(data){
            $('html').unblock();
            // create a modal dialog with the data
            $(data).modal({
                position: ["15%",],
                padding:10,
                onShow: function () {
                    $('#simplemodal-container').css({width: '525px', left: ($('body').width() - 525)/2 + 'px'});
                }
            });
        });
    });

    $('.modal-popup-close').live('click', function(e) {
        e.preventDefault();
        $.modal.close();
    });

    $('.following_followers').live('click', function(e) {
        e.preventDefault();

        $.get($(this).attr('remote_url'), function(data) {
            $(data).modal({
                position: ["15%",],
                padding:10,
                onShow: function () {
                    $('.simplemodal-wrap').css({height:'90%',marginTop:'20px'});
                }
            });
        });
    });

    $('.breadcrumb').hover(
      function() {
        $(this).addClass("hover");
      },
      function() {
        $(this).removeClass("hover");
      }
    );

    $('.address-visible-toggle').live('click', function(e) {
      e.preventDefault();

      $.get($(this).attr('remote_url'), { value: $(this).attr('value') } , function(){
          $('#your_location_message').html('Saved').fadeOut("slow");
      });
    });

    $(".invite-popup form").live("submit",function() {
      email_input = $("#emails");
      if (email_input.val().replace( /\s/g,'') == '') {
        $("#validation").css({display: 'inline'});
        return false;
      }
    });

    $('.follow_form a.unfollow').live('hover', function(e) {
      if (e.type == 'mouseenter')
        $(this).removeClass("btn-primary").addClass("btn-danger").html("<%= I18n.t('helpers.links.unfollow') %>");
      else
        $(this).removeClass("btn-danger").addClass("btn-primary").html("<%= I18n.t('helpers.links.following') %>");
    });

    $('.follow_form a.invalid-follow').live('click', function(){
        alert("<%= I18n.t('follow.validation') %>");
    });

    $('.add-to-your-page').live('click', function(e) {
        e.preventDefault();
        $.get($(this).attr('remote_url'));
    });

    $('.remove-from-your-page').live('click', function(e) {
        e.preventDefault();
        $.get($(this).attr('remote_url'));
    });

    $('#go-back').live('click', function(){
        var currentContainer = $(this).closest('.render-container');
        var step = currentContainer.data('step');
        currentContainer.data('step', null).hide();
        $('.render-container').each(function(){
            var self = $(this);
            if (self.data('step') == (step - 1)) {
                self.show();
            }
        });
    });

    // Select All checkbox trigger
    $('.control-group input[type=checkbox]').live('click', function() {
        $('.buttons #popup-alert').html('');
        var checkbox = $("input[type=checkbox]#select-all");
        if ($('.control-group input[type=checkbox]').length == $('.control-group input[type=checkbox]:checked').length) {
            checkbox.prop('checked', true);
        } else {
            checkbox.prop('checked', false);
        }
    });

    // Select/unselect all checkboxes
    $('#select-all').live('click', function() {
        $('.buttons #popup-alert').html('');
        var checked = $("input[type=checkbox]#select-all").is(':checked');
        $('.control-group .email input[type=checkbox]').each(function(){
            $(this).prop('checked', checked);
        });
    });

    // Function to get the Max value in Array
    Array.max = function( array ){
        return Math.max.apply( Math, array );
    };

    personal_contact();
    disable_search();
    if ($('#area_help').length > 0){
        tooltip();
    }
    if ($('#search_box_help').length > 0){
        search_help_tooltip();
    }
});


     // $('.leftGroups').on('keydown', '#review_address', function(e) {
        $('.review-form form').on('keydown', 'input', function(e) {
         element = e.target
         if (e.keyCode == 13) {
            $(element).blur();
            return false;
         }
     });

function showNewContent(container, content) {
    var toShow = $('.invite-popup-body ' + container);
    var step = 1;
    var steps = $('.render-container').map(function(){
                        return $(this).data('step')
                    });
    var lastStep = Array.max(steps);

    $('.render-container').each(function(){
        var self = $(this);
        if (self.data('step') == lastStep) {
            self.hide();
            toShow.data('step', lastStep + 1);
            toShow.html(content).show();
        }
    });
}

function tooltip() {
    // we want to show the html text in div #why_fb_log_in_text
    var thecontent = $('#your_area_help_text').html();
    $('#area_help').qtip({
            content: thecontent,
            show: 'mouseover',
            hide: 'mouseout',
            position: {
            corner: {
            target: 'bottomLeft',
            tooltip: 'topLeft'
        }
        },
            style :{
            background: '#FAF798',
            width: 400
        // tip: { corner: 'leftTop' }
        }
    });
}

function search_help_tooltip() {
    var content = $('#search_box_help_content').html();
    $('#search_box_help').qtip({
            content: content,
            show: 'mouseover',
            hide: 'mouseout',
            position: {
            corner: {
            target: 'bottomLeft',
            tooltip: 'topLeft'
        }
        },
            style :{
            background: '#FAF798',
            width: 400
        // tip: { corner: 'leftTop' }
        }
    });
}

function personal_contact() {
    $('#review_category_ids').on('change', function(event, params) {
        // can now use params.selected and params.deselected
        // radios = $(".new_review").find('input:radio');
        radio_1 = $(".share_button");
        radio_2 = $(".keep_private_button");
        radio_1.prop("checked", true);
        labels = $('.keep_private_label, .share_label');
        radios = $('.radios');

        arr = $('#review_category_ids').val();
        found = $.inArray('1', arr) > -1;

        if(found) {
            // radios.attr("disabled", true);
            radio_1.prop('checked',false);
            radio_2.prop('checked',true);
            labels.css('color', '#ADAAAB');
            $('#review_category_ids').val(1).trigger("chosen:updated");
            radios.css('display', 'none');
            $('div.private_entry').html('Private Entry');
        }
        else{
            // radios.attr("disabled", false);
            radio_1.prop('checked',true);
            radio_2.prop('checked',false);
            labels.css('color', '#000');
            radios.css('display', 'block');
            $('div.private_entry').html('');
            // $('#review_category_ids_chosen .chosen-drop').css("display", "inline");
        }
    });
}

function disable_search() {
    $("ul.chosen-choices").bind("DOMSubtreeModified", function() {
        if ( $('ul.chosen-choices li').size() > 1 ) {
            // alert("yes");
            $(".search-button").removeAttr("disabled");
        }
        else{
            // alert("no");
            $(".search-button").attr("disabled", "disabled");
        }
    });
}
