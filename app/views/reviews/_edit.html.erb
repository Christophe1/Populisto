<!-- Edit mode. Show this form, when user clicks the 'Edit' link> -->
<div class="edit_review_form">
  <div class="cancel-edit" id="<%= @review.id %>">
    <%= link_to I18n.t('user.review.edit.cancel'), review_path(@review), :remote => true %>
  </div>

  <%= simple_form_for(@review, :remote => true) do |f| %>
    <div class="inputs">
      <div id="except_comment">
        <%= f.input :name, :required => true, :label_html => { :class => 'edit_form_titles' }, :error_html => { :class => 'cant_be_blank'} %>
        <%= chosen_select_for_category(f) %>
        <%= f.input :address, :input_html => { :onkeydown=>"if(event.keyCode==13){return false;}" }, :placeholder => I18n.t('helpers.enter_a_location'), :label_html => { :class => 'edit_form_titles' } %>
        <span id="address_validation"></span>
        <%= f.input :phone  %>
        <%= f.hidden_field :lat  %>
        <%= f.hidden_field :lng  %>
      </div>
      <!-- <div class="right"> -->
      <!-- <div class="comments"><%#= I18n.t('user.review.comments') %></div>  -->
      <%= f.input :comment, :input_html => { :wrap => :soft, :rows => 2, :maxlength => 300}, :label => 'Comments:', :label_html => { :class => 'comments' } %>
      <div class = "char_count_label"></div>
      <!-- buttons: save, delete, share, keep private -->
      <div class="edit_button_group">
        <%= f.submit I18n.t('helpers.links.save'), :class => 'btn btn-success save_review'%>
        <%#= render 'delete', :review => @review %>
        <div class="private_entry entry_<%= @review.id %>"></div>
        <div class="radio_buttons_<%= @review.id %>" style="<%= @review.is_personal_contact? ? "display:none;" : "" %>">
          <%= f.label I18n.t('helpers.links.keep_private'), :class => "keep_private_label" %>
          <%= f.radio_button :visible, "false", :class => "keep_private_button private_#{@review.id}" %>
          <%= f.label I18n.t('helpers.links.share') , :class => "share_label" %>
          <%= f.radio_button :visible, "true" , :class => "share_button public_#{@review.id}" %>
        </div>
      </div>
    </div>
  <% end %>
</div>

<script type="text/javascript">
  // There's 3 functions in this
  // script section: character count, the choosen drop down and 'ENTER should act like TAB'
  $(document).ready(function() {
    $('#company_category_ids, #review_<%= @review.id %> select').chosen({
      placeholder_text_multiple: "Click here to pick a category",
      width: '342px',
      max_selected_options: 2,
      no_results_text: 'No results matched',
      allow_single_deselect: true
    });
    return $("#company_category_ids, #review_<%= @review.id %> select").bind("chosen:maxselected", function() {
      return alert("Enter up to 2 things. For example, 'plasterer' and 'paver', for someone who might do both.");
    });
  });

  $(document).ready(function()  {
    var characters = 300 -  $('textarea').val().length;
    $(this).closest('.control-group').next(".char_count_label").append(characters);
    $('textarea').keyup(function(){
      if($(this).val().length > 300){
          $(this).val($(this).val().substr(0, 300));
      }
      var remaining = 300 -  $(this).val().length;
      $(this).closest('.control-group').next(".char_count_label").html(remaining);
    });
  });


  // I took out the initialize_google_maps function here,
  // because it was clashing with the one in scripts.js
  // this is for the 'Chosen' drop down plug in.
      // $("#review_<%= @review.id %> select").each(function () {
      //     $(this).attr('data-placeholder', $(this).attr('placeholder'));
      // }).chosen();

      // $('.edit_review_form form').submit(function() {
      //   if ($('#review_address').val() == "<%= escape_javascript I18n.t('helpers.enter_a_location') %>") {
      //     $('#address_validation').html("<%= escape_javascript I18n.t('helpers.cant_be_blank') %>");
      //     return false;
      //   }
      // });

  // on ENTER, go to the next TAB
  $('input').on('keydown',function(e){
      var keyCode = e.keyCode || e.which;
       if(e.keyCode === 13) {
        e.preventDefault();
        $('input')[$('input').index(this)+1].focus();
        }
  });

  function personal_contact_<%= @review.id %>() {
    $('#edit_review_<%= @review.id %> #review_category_ids').on('change', function(event, params) {
        // can now use params.selected and params.deselected
        radios = $("#edit_review_<%= @review.id %>").find('input:radio');
        radio_1 = $("#edit_review_<%= @review.id %> .public_<%= @review.id %>");
        radio_2 = $("#edit_review_<%= @review.id %> .private_<%= @review.id %>");
        radio_1.prop("checked", true);
        labels = $('#edit_review_<%= @review.id %> .private_<%= @review.id %>, .public_<%= @review.id %>');
        radio_buttons = $('.radio_buttons_<%= @review.id %>');

        arr = $('#edit_review_<%= @review.id %> #review_category_ids').val();
        found = $.inArray('1', arr) > -1;

        if(found) {
            radio_1.prop('checked',false);
            radio_2.prop('checked',true);
            labels.css('color', '#ADAAAB');
            $('#edit_review_<%= @review.id %> #review_category_ids').val(1).trigger("chosen:updated");
            radio_buttons.css('display', 'none');
            $('.private_entry.entry_<%= @review.id %>').html('Private Entry');
        }
        else{
            radio_1.prop('checked',true);
            radio_2.prop('checked',false);
            labels.css('color', '#000');
            radio_buttons.css('display', 'block');
            $('.private_entry.entry_<%= @review.id %>').html('');
        }
    });
  }
  personal_contact_<%= @review.id %>();
</script>
<div class="clearfix"></div>
